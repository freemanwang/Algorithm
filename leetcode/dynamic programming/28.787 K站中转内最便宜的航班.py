'''
leetcode 787
'''
# 到目的地需要先抵达上一站，然后再挑个最便宜的路径过来
# 状态转移： F(src, dst, k) = min(F(src, dst-1, k-1) + F(dist-1, dst, 1))
# 边界：往前找K站，终止条件是找的超过K站，或者找到K站都没能找到src，这条路废弃
#                 合法路径是往前找 <= k 站找到了src，然后从所有合法路径里找代价最低的

n = 3
edges = [
    [0,1,100],
    [1,2,100],
    [0,2,500]
]
# def